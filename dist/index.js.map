{"version":3,"file":"index.js","sources":["../node_modules/@dmail/project-structure/src/createLocationMeta.js","../node_modules/@dmail/project-structure/src/forEachFileMatching.js","../node_modules/@dmail/project-structure/src/createRoot.js","../src/getReport.js"],"sourcesContent":["// https://git-scm.com/docs/gitignore\n\nconst match = ({\n  patterns,\n  parts,\n  skipPredicate,\n  lastSkipRequired,\n  lastPatternRequired,\n  matchPart,\n  skipUntilStartsMatching = false,\n}) => {\n  let matched\n  let patternIndex = 0\n  let partIndex = 0\n  let matchIndex = 0\n\n  if (patterns.length === 0 && parts.length === 0) {\n    matched = true\n  } else if (patterns.length === 0 && parts.length) {\n    matched = true\n    matchIndex = parts.length\n  } else if (patterns.length && parts.length === 0) {\n    matched = false\n  } else {\n    matched = true\n\n    while (true) {\n      const pattern = patterns[patternIndex]\n      const part = parts[partIndex]\n      const isSkipPattern = skipPredicate(pattern)\n      const isLastPattern = patternIndex === patterns.length - 1\n      const isLastPart = partIndex === parts.length - 1\n\n      if (isSkipPattern && isLastPart && isLastPattern) {\n        matchIndex++\n        break\n      }\n\n      if (isSkipPattern && isLastPattern && isLastPart === false) {\n        matchIndex++\n        break\n      }\n\n      if (isSkipPattern && isLastPattern === false && isLastPart) {\n        // test next pattern on current part\n        patternIndex++\n        continue\n      }\n\n      if (isSkipPattern && isLastPattern === false && isLastPart === false) {\n        // test next pattern on current part\n        patternIndex++\n\n        const skipResult = match({\n          patterns: patterns.slice(patternIndex),\n          parts: parts.slice(partIndex),\n          skipPredicate,\n          lastSkipRequired,\n          lastPatternRequired,\n          matchPart,\n          skipUntilStartsMatching: true,\n        })\n\n        matched = skipResult.matched\n        patternIndex += skipResult.patternIndex\n        partIndex += skipResult.partIndex\n        if (matched) {\n          matchIndex += skipResult.matchIndex\n        }\n\n        if (matched && patternIndex === patterns.length - 1) {\n          break\n        }\n        if (matched && partIndex === parts.length - 1) {\n          break\n        }\n        if (matched) {\n          continue\n        }\n        break\n      }\n\n      const partMatch = matchPart(pattern, part)\n      matched = partMatch.matched\n      matchIndex += partMatch.matchIndex\n\n      if (matched && isLastPattern && isLastPart) {\n        break\n      }\n\n      if (matched && isLastPattern && isLastPart === false) {\n        if (lastPatternRequired) {\n          matched = false\n        }\n        break\n      }\n\n      if (matched && isLastPattern === false && isLastPart) {\n        const remainingPatternAreSkip = patterns\n          .slice(patternIndex + 1)\n          .every((pattern) => skipPredicate(pattern))\n\n        if (remainingPatternAreSkip && lastSkipRequired) {\n          matched = false\n          break\n        }\n        if (remainingPatternAreSkip === false) {\n          matched = false\n          break\n        }\n        break\n      }\n\n      if (matched && isLastPattern === false && isLastPart === false) {\n        patternIndex++\n        partIndex++\n        continue\n      }\n\n      if (matched === false && skipUntilStartsMatching && isLastPart === false) {\n        partIndex++ // keep searching for that pattern\n        continue\n      }\n\n      break\n    }\n\n    return {\n      matched,\n      matchIndex,\n      patternIndex,\n      partIndex,\n    }\n  }\n}\n\nconst locationMatch = (pattern, location) => {\n  return match({\n    patterns: pattern.split(\"/\"),\n    parts: location.split(\"/\"),\n    lastPatternRequired: false,\n    lastSkipRequired: true,\n    skipPredicate: (sequencePattern) => sequencePattern === \"**\",\n    matchPart: (sequencePattern, sequencePart) => {\n      return match({\n        patterns: sequencePattern.split(\"\"),\n        parts: sequencePart.split(\"\"),\n        lastPatternRequired: true,\n        lastSkipRequired: false,\n        skipPredicate: (charPattern) => charPattern === \"*\",\n        matchPart: (charPattern, charSource) => {\n          const matched = charPattern === charSource\n          return {\n            matched,\n            patternIndex: 0,\n            partIndex: 0,\n            matchIndex: matched ? 1 : 0,\n          }\n        },\n      })\n    },\n  })\n}\n\nexport const createLocationMeta = () => {\n  const patternAndMetaList = []\n\n  const addMetaAtPattern = (pattern, meta) => {\n    patternAndMetaList.push({\n      pattern,\n      meta,\n    })\n  }\n\n  const getMetaForLocation = (filename) => {\n    return patternAndMetaList.reduce((previousMeta, { pattern, meta }) => {\n      const { matched } = locationMatch(pattern, filename)\n      return matched ? { ...previousMeta, ...meta } : previousMeta\n    }, {})\n  }\n\n  const canContainsMetaMatching = (filename, metaPredicate) => {\n    return patternAndMetaList.some(({ pattern, meta }) => {\n      const matchIndexForFile = filename.split(\"/\").join(\"\").length\n      const { matched, matchIndex } = locationMatch(pattern, filename)\n      return matched === false && matchIndex >= matchIndexForFile && metaPredicate(meta)\n    })\n  }\n\n  return {\n    addMetaAtPattern,\n    getMetaForLocation,\n    canContainsMetaMatching,\n  }\n}\n","import fs from \"fs\"\n\nconst readDirectory = (dirname) =>\n  new Promise((resolve, reject) => {\n    fs.readdir(dirname, (error, names) => {\n      if (error) {\n        reject(error)\n      } else {\n        resolve(names)\n      }\n    })\n  })\n\nconst readStat = (filename) =>\n  new Promise((resolve, reject) => {\n    fs.stat(filename, (error, stat) => {\n      if (error) {\n        reject(error)\n      } else {\n        resolve(stat)\n      }\n    })\n  })\n\nconst nothingToDo = {}\n\nexport const forEachFileMatching = (\n  { getMetaForLocation, canContainsMetaMatching },\n  root,\n  metaPredicate,\n  callback,\n) => {\n  const visit = (folderRelativeLocation) => {\n    const folderAbsoluteLocation = folderRelativeLocation\n      ? `${root}/${folderRelativeLocation}`\n      : root\n\n    return readDirectory(folderAbsoluteLocation).then((names) => {\n      return Promise.all(\n        names.map((name) => {\n          const ressourceRelativeLocation = folderRelativeLocation\n            ? `${folderRelativeLocation}/${name}`\n            : name\n          const ressourceAbsoluteLocation = `${root}/${ressourceRelativeLocation}`\n\n          return readStat(ressourceAbsoluteLocation).then((stat) => {\n            if (stat.isDirectory()) {\n              if (canContainsMetaMatching(ressourceRelativeLocation, metaPredicate) === false) {\n                return [nothingToDo]\n              }\n              return visit(ressourceRelativeLocation)\n            }\n\n            const meta = getMetaForLocation(ressourceRelativeLocation)\n            if (metaPredicate(meta)) {\n              return Promise.resolve(\n                callback({\n                  absoluteName: ressourceAbsoluteLocation,\n                  relativeName: ressourceRelativeLocation,\n                  meta,\n                }),\n              ).then((result) => {\n                return [result]\n              })\n            }\n            return [nothingToDo]\n          })\n        }),\n      ).then((results) => {\n        return results.reduce((previous, results) => {\n          return [...previous, ...results]\n        }, [])\n      })\n    })\n  }\n  return visit().then((allResults) => {\n    return allResults.filter((result) => result !== nothingToDo)\n  })\n}\n","import { createLocationMeta } from \"./createLocationMeta.js\"\nimport { forEachFileMatching } from \"./forEachFileMatching.js\"\n\nconst CONFIG_FILE_NAME = \"structure.config.js\"\n\nconst loadMetasForRoot = (root) => {\n  return new Promise((resolve, reject) => {\n    const filename = `${root}/${CONFIG_FILE_NAME}`\n\n    let value\n    let errored = false\n    try {\n      // eslint-disable-nextline no-dynamic-require\n      value = require(filename)\n    } catch (e) {\n      value = e\n      errored = true\n    }\n\n    if (errored) {\n      const error = value\n      if (error && error.code === \"MODULE_NOT_FOUND\") {\n        return reject(new Error(`${filename} not found`))\n      }\n      if (error && error.code === \"SYNTAX_ERROR\") {\n        console.error(`${filename} contains a syntax error`)\n        return reject(error)\n      }\n      if (error && error.code === \"REFERENCE_ERROR\") {\n        console.error(`${filename} contains a reference error`)\n        return reject(error)\n      }\n      return reject(error)\n    }\n\n    const namespace = value\n    const namespaceType = typeof namespace\n    if (namespaceType !== \"object\") {\n      return reject(new TypeError(`${filename} must export an object, got ${namespaceType}`))\n    }\n\n    resolve(namespace.metas || [])\n  })\n}\n\nexport const createRoot = (root) => {\n  return loadMetasForRoot(root).then((metas) => {\n    const locationMeta = createLocationMeta()\n    metas.forEach(({ pattern, meta }) => {\n      locationMeta.addMetaAtPattern(pattern, meta)\n    })\n\n    const scopedForEachFileMatching = (predicate, callback) =>\n      forEachFileMatching(locationMeta, root, predicate, callback)\n\n    const listFileMatching = (predicate) =>\n      forEachFileMatching(locationMeta, root, predicate, ({ relativeName }) => relativeName)\n\n    return {\n      forEachFileMatching: scopedForEachFileMatching,\n      listFileMatching,\n    }\n  })\n}\n","import fs from \"fs\"\nimport { createRoot } from \"@dmail/project-structure\"\n\nconst prettier = require(\"prettier\")\n\nconst getFileContentAsString = (location) =>\n  new Promise((resolve, reject) => {\n    fs.readFile(location, (error, buffer) => {\n      if (error) {\n        reject(error)\n      } else {\n        resolve(buffer.toString())\n      }\n    })\n  })\n\nexport const getReport = ({ root }) => {\n  return createRoot(root).then(({ forEachFileMatching }) => {\n    return forEachFileMatching(\n      ({ prettify }) => prettify,\n      ({ absoluteName }) => {\n        return Promise.all([\n          getFileContentAsString(absoluteName),\n          prettier.resolveConfig(absoluteName),\n        ]).then(([source, options]) => {\n          const pretty = prettier.check(source, { ...options, filepath: absoluteName })\n          return {\n            file: absoluteName,\n            pretty,\n          }\n        })\n      },\n    )\n  })\n}\n"],"names":["prettier","require","getFileContentAsString","location","Promise","resolve","reject","fs","readFile","error","buffer","toString","getReport","root","createRoot","then","forEachFileMatching","prettify","absoluteName","all","resolveConfig","source","options","pretty","check","filepath","file"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA,MAAM,KAAK,GAAG,CAAC;EACb,QAAQ;EACR,KAAK;EACL,aAAa;EACb,gBAAgB;EAChB,mBAAmB;EACnB,SAAS;EACT,uBAAuB,GAAG,KAAK;CAChC,KAAK;EACJ,IAAI,QAAO;EACX,IAAI,YAAY,GAAG,EAAC;EACpB,IAAI,SAAS,GAAG,EAAC;EACjB,IAAI,UAAU,GAAG,EAAC;;EAElB,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;IAC/C,OAAO,GAAG,KAAI;GACf,MAAM,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,EAAE;IAChD,OAAO,GAAG,KAAI;IACd,UAAU,GAAG,KAAK,CAAC,OAAM;GAC1B,MAAM,IAAI,QAAQ,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;IAChD,OAAO,GAAG,MAAK;GAChB,MAAM;IACL,OAAO,GAAG,KAAI;;IAEd,OAAO,IAAI,EAAE;MACX,MAAM,OAAO,GAAG,QAAQ,CAAC,YAAY,EAAC;MACtC,MAAM,IAAI,GAAG,KAAK,CAAC,SAAS,EAAC;MAC7B,MAAM,aAAa,GAAG,aAAa,CAAC,OAAO,EAAC;MAC5C,MAAM,aAAa,GAAG,YAAY,KAAK,QAAQ,CAAC,MAAM,GAAG,EAAC;MAC1D,MAAM,UAAU,GAAG,SAAS,KAAK,KAAK,CAAC,MAAM,GAAG,EAAC;;MAEjD,IAAI,aAAa,IAAI,UAAU,IAAI,aAAa,EAAE;QAChD,UAAU,GAAE;QACZ,KAAK;OACN;;MAED,IAAI,aAAa,IAAI,aAAa,IAAI,UAAU,KAAK,KAAK,EAAE;QAC1D,UAAU,GAAE;QACZ,KAAK;OACN;;MAED,IAAI,aAAa,IAAI,aAAa,KAAK,KAAK,IAAI,UAAU,EAAE;;QAE1D,YAAY,GAAE;QACd,QAAQ;OACT;;MAED,IAAI,aAAa,IAAI,aAAa,KAAK,KAAK,IAAI,UAAU,KAAK,KAAK,EAAE;;QAEpE,YAAY,GAAE;;QAEd,MAAM,UAAU,GAAG,KAAK,CAAC;UACvB,QAAQ,EAAE,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAC;UACtC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC;UAC7B,aAAa;UACb,gBAAgB;UAChB,mBAAmB;UACnB,SAAS;UACT,uBAAuB,EAAE,IAAI;SAC9B,EAAC;;QAEF,OAAO,GAAG,UAAU,CAAC,QAAO;QAC5B,YAAY,IAAI,UAAU,CAAC,aAAY;QACvC,SAAS,IAAI,UAAU,CAAC,UAAS;QACjC,IAAI,OAAO,EAAE;UACX,UAAU,IAAI,UAAU,CAAC,WAAU;SACpC;;QAED,IAAI,OAAO,IAAI,YAAY,KAAK,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;UACnD,KAAK;SACN;QACD,IAAI,OAAO,IAAI,SAAS,KAAK,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;UAC7C,KAAK;SACN;QACD,IAAI,OAAO,EAAE;UACX,QAAQ;SACT;QACD,KAAK;OACN;;MAED,MAAM,SAAS,GAAG,SAAS,CAAC,OAAO,EAAE,IAAI,EAAC;MAC1C,OAAO,GAAG,SAAS,CAAC,QAAO;MAC3B,UAAU,IAAI,SAAS,CAAC,WAAU;;MAElC,IAAI,OAAO,IAAI,aAAa,IAAI,UAAU,EAAE;QAC1C,KAAK;OACN;;MAED,IAAI,OAAO,IAAI,aAAa,IAAI,UAAU,KAAK,KAAK,EAAE;QACpD,IAAI,mBAAmB,EAAE;UACvB,OAAO,GAAG,MAAK;SAChB;QACD,KAAK;OACN;;MAED,IAAI,OAAO,IAAI,aAAa,KAAK,KAAK,IAAI,UAAU,EAAE;QACpD,MAAM,uBAAuB,GAAG,QAAQ;WACrC,KAAK,CAAC,YAAY,GAAG,CAAC,CAAC;WACvB,KAAK,CAAC,CAAC,OAAO,KAAK,aAAa,CAAC,OAAO,CAAC,EAAC;;QAE7C,IAAI,uBAAuB,IAAI,gBAAgB,EAAE;UAC/C,OAAO,GAAG,MAAK;UACf,KAAK;SACN;QACD,IAAI,uBAAuB,KAAK,KAAK,EAAE;UACrC,OAAO,GAAG,MAAK;UACf,KAAK;SACN;QACD,KAAK;OACN;;MAED,IAAI,OAAO,IAAI,aAAa,KAAK,KAAK,IAAI,UAAU,KAAK,KAAK,EAAE;QAC9D,YAAY,GAAE;QACd,SAAS,GAAE;QACX,QAAQ;OACT;;MAED,IAAI,OAAO,KAAK,KAAK,IAAI,uBAAuB,IAAI,UAAU,KAAK,KAAK,EAAE;QACxE,SAAS,GAAE;QACX,QAAQ;OACT;;MAED,KAAK;KACN;;IAED,OAAO;MACL,OAAO;MACP,UAAU;MACV,YAAY;MACZ,SAAS;KACV;GACF;EACF;;AAED,MAAM,aAAa,GAAG,CAAC,OAAO,EAAE,QAAQ,KAAK;EAC3C,OAAO,KAAK,CAAC;IACX,QAAQ,EAAE,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC;IAC5B,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC;IAC1B,mBAAmB,EAAE,KAAK;IAC1B,gBAAgB,EAAE,IAAI;IACtB,aAAa,EAAE,CAAC,eAAe,KAAK,eAAe,KAAK,IAAI;IAC5D,SAAS,EAAE,CAAC,eAAe,EAAE,YAAY,KAAK;MAC5C,OAAO,KAAK,CAAC;QACX,QAAQ,EAAE,eAAe,CAAC,KAAK,CAAC,EAAE,CAAC;QACnC,KAAK,EAAE,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC;QAC7B,mBAAmB,EAAE,IAAI;QACzB,gBAAgB,EAAE,KAAK;QACvB,aAAa,EAAE,CAAC,WAAW,KAAK,WAAW,KAAK,GAAG;QACnD,SAAS,EAAE,CAAC,WAAW,EAAE,UAAU,KAAK;UACtC,MAAM,OAAO,GAAG,WAAW,KAAK,WAAU;UAC1C,OAAO;YACL,OAAO;YACP,YAAY,EAAE,CAAC;YACf,SAAS,EAAE,CAAC;YACZ,UAAU,EAAE,OAAO,GAAG,CAAC,GAAG,CAAC;WAC5B;SACF;OACF,CAAC;KACH;GACF,CAAC;EACH;;AAED,AAAO,MAAM,kBAAkB,GAAG,MAAM;EACtC,MAAM,kBAAkB,GAAG,GAAE;;EAE7B,MAAM,gBAAgB,GAAG,CAAC,OAAO,EAAE,IAAI,KAAK;IAC1C,kBAAkB,CAAC,IAAI,CAAC;MACtB,OAAO;MACP,IAAI;KACL,EAAC;IACH;;EAED,MAAM,kBAAkB,GAAG,CAAC,QAAQ,KAAK;IACvC,OAAO,kBAAkB,CAAC,MAAM,CAAC,CAAC,YAAY,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK;MACpE,MAAM,EAAE,OAAO,EAAE,GAAG,aAAa,CAAC,OAAO,EAAE,QAAQ,EAAC;MACpD,OAAO,OAAO,GAAG,EAAE,GAAG,YAAY,EAAE,GAAG,IAAI,EAAE,GAAG,YAAY;KAC7D,EAAE,EAAE,CAAC;IACP;;EAED,MAAM,uBAAuB,GAAG,CAAC,QAAQ,EAAE,aAAa,KAAK;IAC3D,OAAO,kBAAkB,CAAC,IAAI,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK;MACpD,MAAM,iBAAiB,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAM;MAC7D,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,GAAG,aAAa,CAAC,OAAO,EAAE,QAAQ,EAAC;MAChE,OAAO,OAAO,KAAK,KAAK,IAAI,UAAU,IAAI,iBAAiB,IAAI,aAAa,CAAC,IAAI,CAAC;KACnF,CAAC;IACH;;EAED,OAAO;IACL,gBAAgB;IAChB,kBAAkB;IAClB,uBAAuB;GACxB;CACF;;AChMD,MAAM,aAAa,GAAG,CAAC,OAAO;EAC5B,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAK;IAC/B,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,KAAK;MACpC,IAAI,KAAK,EAAE;QACT,MAAM,CAAC,KAAK,EAAC;OACd,MAAM;QACL,OAAO,CAAC,KAAK,EAAC;OACf;KACF,EAAC;GACH,EAAC;;AAEJ,MAAM,QAAQ,GAAG,CAAC,QAAQ;EACxB,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAK;IAC/B,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE,IAAI,KAAK;MACjC,IAAI,KAAK,EAAE;QACT,MAAM,CAAC,KAAK,EAAC;OACd,MAAM;QACL,OAAO,CAAC,IAAI,EAAC;OACd;KACF,EAAC;GACH,EAAC;;AAEJ,MAAM,WAAW,GAAG,GAAE;;AAEtB,AAAO,MAAM,mBAAmB,GAAG;EACjC,EAAE,kBAAkB,EAAE,uBAAuB,EAAE;EAC/C,IAAI;EACJ,aAAa;EACb,QAAQ;KACL;EACH,MAAM,KAAK,GAAG,CAAC,sBAAsB,KAAK;IACxC,MAAM,sBAAsB,GAAG,sBAAsB;QACjD,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,sBAAsB,CAAC,CAAC;QACnC,KAAI;;IAER,OAAO,aAAa,CAAC,sBAAsB,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK;MAC3D,OAAO,OAAO,CAAC,GAAG;QAChB,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK;UAClB,MAAM,yBAAyB,GAAG,sBAAsB;cACpD,CAAC,EAAE,sBAAsB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;cACnC,KAAI;UACR,MAAM,yBAAyB,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,yBAAyB,CAAC,EAAC;;UAExE,OAAO,QAAQ,CAAC,yBAAyB,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK;YACxD,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;cACtB,IAAI,uBAAuB,CAAC,yBAAyB,EAAE,aAAa,CAAC,KAAK,KAAK,EAAE;gBAC/E,OAAO,CAAC,WAAW,CAAC;eACrB;cACD,OAAO,KAAK,CAAC,yBAAyB,CAAC;aACxC;;YAED,MAAM,IAAI,GAAG,kBAAkB,CAAC,yBAAyB,EAAC;YAC1D,IAAI,aAAa,CAAC,IAAI,CAAC,EAAE;cACvB,OAAO,OAAO,CAAC,OAAO;gBACpB,QAAQ,CAAC;kBACP,YAAY,EAAE,yBAAyB;kBACvC,YAAY,EAAE,yBAAyB;kBACvC,IAAI;iBACL,CAAC;eACH,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK;gBACjB,OAAO,CAAC,MAAM,CAAC;eAChB,CAAC;aACH;YACD,OAAO,CAAC,WAAW,CAAC;WACrB,CAAC;SACH,CAAC;OACH,CAAC,IAAI,CAAC,CAAC,OAAO,KAAK;QAClB,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,OAAO,KAAK;UAC3C,OAAO,CAAC,GAAG,QAAQ,EAAE,GAAG,OAAO,CAAC;SACjC,EAAE,EAAE,CAAC;OACP,CAAC;KACH,CAAC;IACH;EACD,OAAO,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,UAAU,KAAK;IAClC,OAAO,UAAU,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,MAAM,KAAK,WAAW,CAAC;GAC7D,CAAC;CACH;;AC3ED,MAAM,gBAAgB,GAAG,sBAAqB;;AAE9C,MAAM,gBAAgB,GAAG,CAAC,IAAI,KAAK;EACjC,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAK;IACtC,MAAM,QAAQ,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,gBAAgB,CAAC,EAAC;;IAE9C,IAAI,MAAK;IACT,IAAI,OAAO,GAAG,MAAK;IACnB,IAAI;;MAEF,KAAK,GAAG,OAAO,CAAC,QAAQ,EAAC;KAC1B,CAAC,OAAO,CAAC,EAAE;MACV,KAAK,GAAG,EAAC;MACT,OAAO,GAAG,KAAI;KACf;;IAED,IAAI,OAAO,EAAE;MACX,MAAM,KAAK,GAAG,MAAK;MACnB,IAAI,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,kBAAkB,EAAE;QAC9C,OAAO,MAAM,CAAC,IAAI,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;OAClD;MACD,IAAI,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,cAAc,EAAE;QAC1C,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,wBAAwB,CAAC,EAAC;QACpD,OAAO,MAAM,CAAC,KAAK,CAAC;OACrB;MACD,IAAI,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,iBAAiB,EAAE;QAC7C,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,2BAA2B,CAAC,EAAC;QACvD,OAAO,MAAM,CAAC,KAAK,CAAC;OACrB;MACD,OAAO,MAAM,CAAC,KAAK,CAAC;KACrB;;IAED,MAAM,SAAS,GAAG,MAAK;IACvB,MAAM,aAAa,GAAG,OAAO,UAAS;IACtC,IAAI,aAAa,KAAK,QAAQ,EAAE;MAC9B,OAAO,MAAM,CAAC,IAAI,SAAS,CAAC,CAAC,EAAE,QAAQ,CAAC,4BAA4B,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC;KACxF;;IAED,OAAO,CAAC,SAAS,CAAC,KAAK,IAAI,EAAE,EAAC;GAC/B,CAAC;EACH;;AAED,AAAO,MAAM,UAAU,GAAG,CAAC,IAAI,KAAK;EAClC,OAAO,gBAAgB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK;IAC5C,MAAM,YAAY,GAAG,kBAAkB,GAAE;IACzC,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK;MACnC,YAAY,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,EAAC;KAC7C,EAAC;;IAEF,MAAM,yBAAyB,GAAG,CAAC,SAAS,EAAE,QAAQ;MACpD,mBAAmB,CAAC,YAAY,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAC;;IAE9D,MAAM,gBAAgB,GAAG,CAAC,SAAS;MACjC,mBAAmB,CAAC,YAAY,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,EAAE,YAAY,EAAE,KAAK,YAAY,EAAC;;IAExF,OAAO;MACL,mBAAmB,EAAE,yBAAyB;MAC9C,gBAAgB;KACjB;GACF,CAAC;CACH;;AC5DD,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,MAAMC,sBAAsB,GAAIC,QAAD,IAC7B,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;EAC/BC,EAAE,CAACC,QAAH,CAAYL,QAAZ,EAAsB,CAACM,KAAD,EAAQC,MAAR,KAAmB;QACnCD,KAAJ,EAAW;MACTH,MAAM,CAACG,KAAD,CAAN;KADF,MAEO;MACLJ,OAAO,CAACK,MAAM,CAACC,QAAP,EAAD,CAAP;;GAJJ;CADF,CADF;;AAWA,MAAaC,SAAS,GAAG,CAAC;EAAEC;CAAH,KAAc;SAC9BC,UAAU,CAACD,IAAD,CAAV,CAAiBE,IAAjB,CAAsB,CAAC;yBAAEC;GAAH,KAA6B;WACjDA,sBAAmB,CACxB,CAAC;MAAEC;KAAH,KAAkBA,QADM,EAExB,CAAC;MAAEC;KAAH,KAAsB;aACbd,OAAO,CAACe,GAAR,CAAY,CACjBjB,sBAAsB,CAACgB,YAAD,CADL,EAEjBlB,QAAQ,CAACoB,aAAT,CAAuBF,YAAvB,CAFiB,CAAZ,EAGJH,IAHI,CAGC,CAAC,CAACM,MAAD,EAASC,OAAT,CAAD,KAAuB;cACvBC,MAAM,GAAGvB,QAAQ,CAACwB,KAAT,CAAeH,MAAf,oBAA4BC,OAA5B;UAAqCG,QAAQ,EAAEP;WAA9D;eACO;UACLQ,IAAI,EAAER,YADD;UAELK;SAFF;OALK,CAAP;KAHsB,CAA1B;GADK,CAAP;CADK;;;;"}